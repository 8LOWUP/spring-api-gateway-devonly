plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Swagger/OpenAPI (WebFlux 전용)
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

	// Spring Cloud Bootstrap
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	// Prometheus 및 Micrometer
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// Spring Cloud LoadBalancer (로드 밸런싱을 위해
	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

	// Resilience4j (서킷 브레이커 패턴을 위해
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

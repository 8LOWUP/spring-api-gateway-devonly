# docker-compose --env-file docker-compose.dev.env up -d

services:
  spring-api-gateway-devonly:
    container_name: gateway-dev-service
    image: ${KCR_HOST}/project/spring-api-gateway-devonly:latest
    ports:
      - 80:8000
    networks:
      - mm_dev_network

  mcp-hub-member:
    container_name: mcp-hub-member
    image: ${KCR_HOST}/project/mcp-hub-member:latest
    ports:
      - 811:8081
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - mm_dev_network

  mcp-hub-workspace:
    container_name: mcp-hub-workspace
    image: ${KCR_HOST}/project/mcp-hub-workspace:latest
    ports:
      - 812:8081
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - mm_dev_network

  mcp-hub-mcp:
    container_name: mcp-hub-mcp
    image: ${KCR_HOST}/project/mcp-hub-mcp:latest
    ports:
      - 813:8081
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - mm_dev_network

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - mm_dev_network

  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - 3360:3306
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - mm_dev_network


networks:
  mm_dev_network:
    name: mm_dev_network
    driver: bridge
    internal: false

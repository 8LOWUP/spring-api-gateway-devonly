server:
  port: 8000

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    url: /v3/api-docs/aggregate


spring:
  config:
    activate:
      on-profile: default
  application:
    name: apigateway-service
#  rabbitmq:
#    host: 127.0.0.1
#    port: 5672
#    username: guest
#    password: guest
#    listener:
#      simple:
#        prefetch: 5
#  springdoc:
#    swagger-ui:
#      urls:
#        - name: member-service
#          url: /member/v3/api-docs
#        - name: mcp-service
#          url: /mcp/v3/api-docs
#        - name: workspace-service
#          url: /workspace/v3/api-docs
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: member-service
          uri: http://mcp-hub-member:8080 # 컨테이너명이 꼭 member여야 함, 내부 포트가 꼭 8081이어야 함
          predicates:
            - Path=/member/**

        - id: mcp-service
          uri: http://mcp-hub-mcp:8080 # 컨테이너명이 꼭 mcp여야 함, 내부 포트가 꼭 8081이어야 함
          predicates:
            - Path=/mcps/**

        - id: workspace-service
          uri: http://mcp-hub-workspace:8080 # 컨테이너명이 꼭 workspace여야 함, 내부 포트가 꼭 8081이어야 함
          predicates:
            - Path=/workspace/**

#token:
#  secret: user_token

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, info
